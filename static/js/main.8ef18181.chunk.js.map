{"version":3,"sources":["common/layout/navbar-landing.js","firebase.js","modules/landing-component.js","app/landing-page.js","modules/portofolio-component.js","app/portofolio-page.js","modules/top-novel.js","app/top-page.js","modules/all-component.js","app/all.js","modules/button.js","modules/editnovel-component.js","modules/history-component.js","app/history-page.js","common/router/router.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Navbar","state","current","handleClick","e","console","log","setState","key","className","onClick","this","selectedKeys","mode","Item","AppstoreOutlined","to","UserOutlined","StarOutlined","title","MoreOutlined","ItemGroup","VerticalAlignBottomOutlined","HistoryOutlined","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Content","Layout","Footer","Header","LandingComponent","React","useState","novels","setNovels","useEffect","a","db","firestore","collection","get","data","docs","map","doc","fetchData","style","overflow","novel","src","Cover","width","height","resizeMode","cover","color","Judul","Penulis","Sinopsis","size","backgroundColor","textAlign","LandingPage","visible","showModal","handleOk","handleCancel","initialData","PortofolioComponent","Foto","Nama","Tentang","PortofolioPage","TopNovel","TopNovelPage","Select","Option","BuyNow","newCover","setCover","newJudul","setJudul","newPenulis","setPenulis","newSinopsis","setSinopsis","padding","background","shape","margin","labelCol","span","wrapperCol","label","name","value","onChange","target","add","type","ghost","BuyNowPage","ButtonAksi","class","id","delete","DeleteTwoTone","twoToneColor","EditNovel","setShowNovel","set","href","History","shownovel","justify","HistoryPage","Router","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ef18181.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport '../layout/css/navbar-style.css';\r\nimport {\r\n  HistoryOutlined,\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n  StarOutlined,\r\n  UserOutlined,\r\n  VerticalAlignBottomOutlined,\r\n  MoreOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <nav className=\"menuBar\">\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <AppstoreOutlined />\r\n            <Link to=\"/\">All</Link> \r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <UserOutlined />\r\n          <Link to=\"/portofolio\">Author</Link>\r\n        </Menu.Item>    \r\n        <Menu.Item key=\"top\">\r\n          <StarOutlined />\r\n          <Link to=\"/topnovel\">Best Seller</Link>\r\n        </Menu.Item>\r\n        \r\n        <SubMenu\r\n          title={\r\n            <span className=\"ticket\">\r\n              <MoreOutlined/>\r\n              More\r\n            </span>\r\n          }\r\n        >\r\n        <Menu.ItemGroup>\r\n          <Menu.Item key=\"buy\">\r\n            <VerticalAlignBottomOutlined />\r\n            <Link to=\"/buynow\">Add Novel</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"history\">\r\n            <HistoryOutlined />\r\n            <Link to=\"/history\">History</Link>\r\n          </Menu.Item>\r\n        </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyAOKsfYNzRerw7N67cszMsZs_92n0iDfxk\",\r\n    authDomain: \"novelist-ab375.firebaseapp.com\",\r\n    databaseURL: \"https://novelist-ab375.firebaseio.com\",\r\n    projectId: \"novelist-ab375\",\r\n    storageBucket: \"novelist-ab375.appspot.com\",\r\n    messagingSenderId: \"837745492262\",\r\n    appId: \"1:837745492262:web:972d8bf0b56aec2ce681e7\",\r\n    measurementId: \"G-H329NT0TYC\"\r\n  };\r\n \r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  \r\n\r\n  export default firebase;","import React from 'react';\r\nimport { Layout, Row } from 'antd';\r\nimport '../assets/css/landing.css'\r\nimport firebase from '../firebase'\r\nconst { Content, Header,Footer } = Layout;\r\n\r\nfunction LandingComponent (){\r\n    const[novels,setNovels] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n      const fetchData = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"Novelist\").get()\r\n        setNovels (data.docs.map(doc=>doc.data()))\r\n      }\r\n      fetchData()\r\n    }, [] )\r\n\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                <Content style={{ overflow: \"hidden\" }}>\r\n                <Row className=\"section-container\">\r\n                {novels.map (novel =>\r\n                <div className=\"post\">\r\n                    <br/>\r\n                    <div className=\"img-thumb\">\r\n                        <img src={novel.Cover} width=\"200\" height=\"300\" resizeMode=\"contain\" cover=\"center\" />\r\n                    </div>  \r\n                    <div className=\"content\">\r\n                        <center>\r\n                            <p className=\"title\"> <font color=\"#CD5C5C\">{novel.Judul}</font>  </p>\r\n                        </center>  \r\n                        <center>\r\n                        <p className=\"penulis\"> <font color=\"#CD5C5C\">{novel.Penulis}</font>  </p>\r\n                        </center> \r\n                        <p className=\"desc\"> {novel.Sinopsis} </p>\r\n                    </div>\r\n                    <hr size=\"0,1px\" color=\"#CD5C5C\" />\r\n                </div>\r\n                )}\r\n                </Row>\r\n                </Content>\r\n                <Footer style={{backgroundColor:'white' , textAlign: 'center'}}>Novelist ©2020 </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\nexport default LandingComponent;","import React, {Component} from 'react'; \r\n// import react merupakan bawaan dari react itu sendiri\r\nimport LandingComponent from '../modules/landing-component'\r\n{/*import landingcomponent merupakan child dari parent landingpage, di\r\nfile landingpage, kita butuh sebuah componen yang akan digunakan untuk menampilkan halamannya\r\noleh karena itu kita membutuhkan landing component yang ada di folder modules. */}\r\n\r\nclass LandingPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n    //state digunakan untuk membuat inisial data yang ada dihalaman landing, dia dibuat di file landing-page.js\r\n    //pada file ini kita membuat variabel visible yang kita buat nilai awalnya false, variabel ini nantinya akan\r\n    //digunakan untuk menampilkan modal yang akan digunakan nanti\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    //componentdimount nanti saja ya wkwk\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n    //showmodal ini merupakan function, dia memliki fungsi untuk mengubah state visible yang awalnya false,\r\n    //menjadi true, jadi ketika modalnya diklik akan keluar modalnya.\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <LandingComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n            //nah di sini kita mereturn component yang sudah kita import di atas di dalam landingcomponent itu\r\n            //kita bisa memasukkan data atau function yang kita perlukan, fungsi yang kita perlukan akan menjadi\r\n            //sebuah properti jika kita panggil di landing-component.js\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Layout, Row } from 'antd';\r\nimport '../assets/css/portofolio.css'\r\nimport firebase from '../firebase'\r\nconst { Content, Header, Footer } = Layout;\r\n\r\nfunction PortofolioComponent (){\r\n    const[novels,setNovels] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n      const fetchData = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"Author\").get()\r\n        setNovels (data.docs.map(doc=>doc.data()))\r\n      }\r\n      fetchData()\r\n    }, [] )\r\n\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                <Content style={{ overflow: \"hidden\" }}>\r\n                <Row className=\"section-container\">\r\n                {novels.map (novel =>\r\n                <div className=\"post\">\r\n                    <div className=\"img-thumb\">\r\n                        <img src={novel.Foto} width=\"200\" height=\"200\"  />\r\n                    </div>  \r\n                    <div className=\"content\">\r\n                    <center>                   \r\n                        <p className=\"title\" > <font color=\"#CD5C5C\"> {novel.Nama} </font></p>\r\n                        <p className=\"penulis\"> {novel.Tentang} </p>\r\n                    </center>\r\n                    </div>\r\n                    <hr color=\"#CD5C5C\" />\r\n                </div>\r\n                )}\r\n                </Row>\r\n                </Content>\r\n                <Footer style={{backgroundColor:'white' , textAlign: 'center'}}>Novelist ©2020 </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n\r\n\r\nexport default PortofolioComponent;","import React, {Component} from 'react'; \r\nimport PortofolioComponent from '../modules/portofolio-component'\r\n\r\n\r\n\r\n\r\nclass PortofolioPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n   \r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <PortofolioComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortofolioPage;","import React from 'react';\r\nimport { Layout, Row } from 'antd';\r\nimport '../assets/css/top-novel.css'\r\nimport firebase from '../firebase'\r\nconst { Content, Header,Footer } = Layout;\r\n\r\n\r\n\r\n\r\nfunction TopNovel(){\r\n    const[novels,setNovels] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n      const fetchData = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"topnovel\").get()\r\n        setNovels (data.docs.map(doc=>doc.data()))\r\n      }\r\n      fetchData()\r\n    }, [] )\r\n\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                <Content style={{ overflow: \"hidden\" }}>\r\n                <Row className=\"section-container\">\r\n                {novels.map (novel =>\r\n                <div className=\"post\">\r\n                    <div className=\"img-thumb\">\r\n                    <img src={novel.Cover} width=\"200\" height=\"300\"  />\r\n                    </div>  \r\n                    <div className=\"content\">\r\n                        <center>\r\n                            <p className=\"title\"> <font color=\"#CD5C5C\">  {novel.Judul} </font> </p>\r\n                        </center>\r\n                        <center>\r\n                            <p className=\"penulis\"> <font color=\"#CD5C5C\">  {novel.Penulis} </font> </p>\r\n                        </center>                                               \r\n                        <p className=\"desc\"> {novel.Sinopsis} </p>\r\n                    </div>\r\n                    <hr color=\"#CD5C5C\" />\r\n                </div>\r\n                )}\r\n                </Row>\r\n                </Content>\r\n                <Footer style={{backgroundColor:'white' , textAlign: 'center'}}>Novelist ©2020 </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nexport default TopNovel;\r\n","import React, {Component} from 'react'; \r\nimport TopNovel from '../modules/top-novel'\r\n\r\n\r\n\r\n\r\nclass TopNovelPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n   \r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <TopNovel\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNovelPage;","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Layout,\r\n  Row\r\n} from 'antd';\r\nimport  { Select} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport '../assets/css/all.css'\r\nimport firebase from '../firebase'\r\nconst { Content, Header, Footer } = Layout;\r\nconst {Option} = Select;\r\n\r\nfunction BuyNow() {\r\n\r\n    const [newCover, setCover] = React.useState()\r\n    const [newJudul, setJudul] = React.useState()\r\n    const [newPenulis, setPenulis] = React.useState()\r\n    const [newSinopsis, setSinopsis] = React.useState()\r\n   \r\n   \r\n    const onCreate = () => {\r\n      const db = firebase.firestore()\r\n      db.collection('Novelist').add({Cover:newCover, Judul: newJudul, Penulis: newPenulis, Sinopsis: newSinopsis})\r\n    }\r\n  \r\n    return (\r\n      <Layout  style={{padding:'16px auto', background: '#fff'}}>\r\n          <Header style={{background: '#fff'}}>\r\n          <Content style={{padding : '16px auto'}}>\r\n          <center>\r\n          <Button shape=\"round\"  style={{backgroundColor:'white', margin: '16px auto'}}>\r\n                <h4>Add Now</h4>\r\n          </Button>\r\n          </center>\r\n          \r\n  \r\n        <Form\r\n          style={{padding: '16px auto'}}\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 10 }}\r\n        > \r\n          <Form.Item label=\"Masukkan link cover\" name=\"Cover\" style={{margin : '16px auto'}}>\r\n            <Input value={newCover} onChange={(e) => setCover(e.target.value)}/>\r\n          </Form.Item>\r\n          <Form.Item label=\"Judul\" name=\"Judul\" style={{margin : '16px auto'}}>\r\n            <Input value={newJudul} onChange={(e) => setJudul(e.target.value)}/>\r\n          </Form.Item>\r\n          <Form.Item label=\"Penulis\" name=\"penulis\" style={{margin : '16px auto'}}>\r\n            <Input value={newPenulis} onChange={(e) => setPenulis(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Sinopsis\" name=\"Sinopsis\" style={{margin : '16px auto'}}>\r\n            <Input value={newSinopsis} onChange={(e) => setSinopsis(e.target.value)} />\r\n          </Form.Item>\r\n        </Form>\r\n        <center>\r\n        <Button  onClick={onCreate} type=\"primary\" ghost style={{padding: '16px auto'}}>Finish</Button>\r\n        </center>        \r\n      </Content>\r\n      <Footer style={{backgroundColor:'white' , textAlign: 'center'}}>Kelompok Film ©2020 </Footer>\r\n      </Header>\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n  export default BuyNow;","import React, {Component} from 'react'; \r\n// import react merupakan bawaan dari react itu sendiri\r\nimport BuyNow from '../modules/all-component'\r\n{/*import landingcomponent merupakan child dari parent landingpage, di\r\nfile landingpage, kita butuh sebuah componen yang akan digunakan untuk menampilkan halamannya\r\noleh karena itu kita membutuhkan landing component yang ada di folder modules. */}\r\n\r\nclass BuyNowPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n    //state digunakan untuk membuat inisial data yang ada dihalaman landing, dia dibuat di file landing-page.js\r\n    //pada file ini kita membuat variabel visible yang kita buat nilai awalnya false, variabel ini nantinya akan\r\n    //digunakan untuk menampilkan modal yang akan digunakan nanti\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    //componentdimount nanti saja ya wkwk\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n    //showmodal ini merupakan function, dia memliki fungsi untuk mengubah state visible yang awalnya false,\r\n    //menjadi true, jadi ketika modalnya diklik akan keluar modalnya.\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <BuyNow\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n            //nah di sini kita mereturn component yang sudah kita import di atas di dalam landingcomponent itu\r\n            //kita bisa memasukkan data atau function yang kita perlukan, fungsi yang kita perlukan akan menjadi\r\n            //sebuah properti jika kita panggil di landing-component.js\r\n        );\r\n    }\r\n}\r\n\r\nexport default BuyNowPage;","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport { DeleteTwoTone } from '@ant-design/icons';\r\nimport firebase from '../firebase'\r\n\r\nconst ButtonAksi = ({novel}) => {\r\n    const onDelete = () => {\r\n        const db = firebase.firestore()\r\n        db.collection('Novelist').doc(novel.id).delete();\r\n    }\r\n   \r\n\r\n    return (\r\n            <Button class=\"anticon anticon-delete\" onClick={onDelete}><DeleteTwoTone twoToneColor=\"#eb2f96\"/></Button>\r\n    );\r\n}\r\n\r\nexport default ButtonAksi;","import React from 'react';\r\nimport firebase from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Layout,Card,Row\r\n} from 'antd';\r\nimport '../assets/css/editnovel.css';\r\n\r\nconst { Content, Header,Footer } = Layout;\r\n\r\n\r\nconst EditNovel = ({ novel }) => {\r\n  \r\n  const [Cover, setCover] = React.useState()\r\n  const [Judul, setJudul] = React.useState()\r\n  const [Penulis, setPenulis] = React.useState()\r\n  const [Sinopsis, setSinopsis] = React.useState()\r\n\r\n  // const [newEmail, setEmail]= React.useState(ticket.newEmail);\r\n  // const [newName, setName]= React.useState(ticket.newName);\r\n  // const [newTotalTicket, setTotalTicket]= React.useState(ticket.newTotalTicket);\r\n  // const [newChoosenMovie, setChoosenMovie]= React.useState(ticket.newChoosenMovie);\r\n  \r\n  const [shownovel, setShowNovel] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n      const fetchData = async () => {\r\n          const db = firebase.firestore()\r\n          const data = await db.collection(\"Novelist\").get()\r\n          setShowNovel(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n      }\r\n      fetchData();\r\n  }, []);\r\n  \r\n\r\n  const onUpdate = () => {\r\n    const db = firebase.firestore()\r\n    db.collection('Novelist').doc(novel.id).set({...novel, Cover,Judul,Penulis,Sinopsis})\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Layout style={{padding:'16px auto', background: '#fff'}}>\r\n        <Header style={{background: '#fff'}}>\r\n        <Content style={{padding : '16px auto'}}>\r\n\r\n        \r\n      <div> \r\n      <Form\r\n        \r\n        style={{padding: '16px auto'}}\r\n        labelCol={{ span: 15 }}\r\n        wrapperCol={{ span: 15 }}\r\n      >\r\n        \r\n        <center>\r\n        <Form.Item label=\"Masukkan link cover\" name=\"Cover\" style={{margin : '16px auto'}}>\r\n          <Input value={Content} onChange={(e) => setCover(e.target.value)} />\r\n        </Form.Item>\r\n        </center>      \r\n      </Form>\r\n      <center>\r\n      <Button onClick={onUpdate} type=\"primary\" ghost style={{padding: '16px auto'}}><a href=\"/History\">Update</a></Button>\r\n      </center>\r\n      </div>\r\n     \r\n      \r\n      \r\n      \r\n    </Content>\r\n    \r\n    </Header>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default EditNovel;","import React from 'react';\r\nimport { Layout,Card,Row,Button} from 'antd';\r\nimport '../assets/css/history.css';\r\nimport firebase from '../firebase';\r\nimport ButtonAksi from './button';\r\nimport EditNovel from './editnovel-component';\r\nimport { EditTwoTone } from '@ant-design/icons';\r\n\r\nconst { Content, Header,Footer } = Layout;\r\n\r\n\r\n\r\nfunction History() {\r\n    const [shownovel, setShowNovel] = React.useState([]);\r\n  \r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore()\r\n            const data = await db.collection(\"Novelist\").get()\r\n            setShowNovel(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    \r\n    return (\r\n        \r\n        <div>\r\n        <Layout style={{padding:'16px auto'}}>\r\n            <Header style={{background: '#fff'}}>\r\n            <Content style={{padding : '16px auto'}}>\r\n              <Button shape=\"round\"  style={{backgroundColor:'white', margin: '16px auto'}}>\r\n                        <h4>History</h4>\r\n              </Button>\r\n              <Row justify=\"center\">\r\n              {shownovel.map(novel =>\r\n               <Card  style={{ width: 800, height: 1500 }}>\r\n                 <div className=\"img-thumb\">\r\n                    <img src={novel.Cover} width=\"200\" height=\"300\"  />\r\n                </div>                \r\n                <center> <p> <font color='#CD5C5C'><b>{novel.Judul} </b></font> <b></b></p> </center>\r\n                <center> <p><font color='#CD5C5C'> {novel.Penulis}</font></p> </center>\r\n                <center> <a href=\"/History\">\r\n                    <ButtonAksi novel={novel}/>\r\n                  </a>\r\n                </center>\r\n                 <center> {shownovel.map(novel =>\r\n              <EditNovel novel={novel}> </EditNovel>\r\n              )}</center>\r\n               </Card>\r\n              )}\r\n              <Row>\r\n             \r\n              </Row>\r\n              </Row>\r\n              \r\n              \r\n                </Content>\r\n                <Footer style={{backgroundColor:'white' , textAlign: 'center'}}>Novelist ©2020 </Footer>\r\n            </Header>\r\n        </Layout>\r\n        </div>\r\n    );\r\n  }\r\n       \r\n  \r\n  export default History;","import React, {Component} from 'react'; \r\n// import react merupakan bawaan dari react itu sendiri\r\nimport History from '../modules/history-component'\r\n{/*import landingcomponent merupakan child dari parent landingpage, di\r\nfile landingpage, kita butuh sebuah componen yang akan digunakan untuk menampilkan halamannya\r\noleh karena itu kita membutuhkan landing component yang ada di folder modules. */}\r\n\r\nclass HistoryPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n    //state digunakan untuk membuat inisial data yang ada dihalaman landing, dia dibuat di file landing-page.js\r\n    //pada file ini kita membuat variabel visible yang kita buat nilai awalnya false, variabel ini nantinya akan\r\n    //digunakan untuk menampilkan modal yang akan digunakan nanti\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    //componentdimount nanti saja ya wkwk\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n    //showmodal ini merupakan function, dia memliki fungsi untuk mengubah state visible yang awalnya false,\r\n    //menjadi true, jadi ketika modalnya diklik akan keluar modalnya.\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <History\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n            //nah di sini kita mereturn component yang sudah kita import di atas di dalam landingcomponent itu\r\n            //kita bisa memasukkan data atau function yang kita perlukan, fungsi yang kita perlukan akan menjadi\r\n            //sebuah properti jika kita panggil di landing-component.js\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryPage;","import React, {Component} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport LandingPage from '../../app/landing-page';\r\nimport PortofolioPage from '../../app/portofolio-page';\r\nimport TopNovelPage from '../../app/top-page';\r\nimport BuyNowPage from '../../app/all';\r\nimport HistoryPage from '../../app/history-page';\r\n\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={LandingPage}/>\r\n                <Route path=\"/portofolio\" component={PortofolioPage}/>\r\n                <Route path=\"/topnovel\" component={TopNovelPage} />\r\n                <Route path=\"/buynow\" component={BuyNowPage} />\r\n                <Route path=\"/history\" component={HistoryPage} />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport './assets/css/App.css';\r\nimport Navbar from './common/layout/navbar-landing';\r\nimport Routing from './common/router/router';\r\n\r\nfunction App() {\r\n    return (\r\n      <div>\r\n      <Navbar/>\r\n      <Routing/>\r\n      </div>\r\n      );\r\n  }\r\n  \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport LandingPage from '../src/app/landing-page'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App/></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}